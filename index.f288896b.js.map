{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EAAS,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EADD,SAAS,gBAAgB,CAAC,eAAe,MAAM,K,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EACnC,GAAG,CAAC,SAAC,CAA/B,EAAwC,MAAA,CAAC,EAAK,WAAW,CAAC,UAAU,CAAC,IAAK,G,GAEpE,EAAQ,EAAO,MAAM,CAAC,SAAC,CAAA,CAAM,CAAnC,EAA4C,OAAA,EAAO,C,GAC7C,EAAU,KAAK,KAAK,CAAC,EAAQ,EAAO,MAAM,EAE1C,EAAa,SAAS,aAAa,CAAC,UACpC,EAAe,SAAS,aAAa,CAAC,WAE5C,CAAA,EAAW,SAAS,CAAG,UAAY,EAAM,cAAc,CAAC,SACxD,EAAa,SAAS,CAAG,YAAc,EAAQ,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar nodes = document.querySelectorAll(\".population\").values();\nvar values = _to_consumable_array(nodes).map(function(node) {\n    return +node.textContent.replaceAll(\",\", \"\");\n});\nvar total = values.reduce(function(num1, num2) {\n    return num1 + num2;\n});\nvar average = Math.round(total / values.length);\nvar totalField = document.querySelector(\".total\");\nvar averageField = document.querySelector(\".average\");\ntotalField.innerText = \"Total: \" + total.toLocaleString(\"en-US\");\naverageField.innerText = \"Average: \" + average.toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.f288896b.js.map\n","'use strict';\n\nconst nodes = document.querySelectorAll('.population').values();\nconst values = [...nodes].map((node) => +node.textContent.replaceAll(',', ''));\n\nconst total = values.reduce((num1, num2) => num1 + num2);\nconst average = Math.round(total / values.length);\n\nconst totalField = document.querySelector('.total');\nconst averageField = document.querySelector('.average');\n\ntotalField.innerText = 'Total: ' + total.toLocaleString('en-US');\naverageField.innerText = 'Average: ' + average.toLocaleString('en-US');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","values","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","node","textContent","replaceAll","total","reduce","num1","num2","average","Math","round","totalField","querySelector","averageField","innerText","toLocaleString"],"version":3,"file":"index.f288896b.js.map"}